<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qz.sm.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.qz.sm.dto.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="login_name" property="login_name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="nick_name" property="nick_name" jdbcType="VARCHAR" />
    <result column="real_name" property="real_name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_name, password, tel, nick_name, real_name, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.qz.sm.dto.User" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (login_name, password, tel, 
      nick_name, real_name, type
      )
    values (#{login_name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{nick_name,jdbcType=VARCHAR}, #{real_name,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qz.sm.dto.User" >
    <selectKey resultType="java.lang.String" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="login_name != null" >
        login_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="nick_name != null" >
        nick_name,
      </if>
      <if test="real_name != null" >
        real_name,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="login_name != null" >
        #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null" >
        #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null" >
        #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qz.sm.dto.User" >
    update user
    <set >
      <if test="login_name != null" >
        login_name = #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="nick_name != null" >
        nick_name = #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="real_name != null" >
        real_name = #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qz.sm.dto.User" >
    update user
    set login_name = #{login_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      nick_name = #{nick_name,jdbcType=VARCHAR},
      real_name = #{real_name,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>